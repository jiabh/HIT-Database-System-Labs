interface Serializable
{
    +load(istream): int
    +dump(ostream): int
}

class Record
{
    -key: int
    -data: char[12]
    +getter()
    +operator_cmp()
    +operator=()
}

interface AbstractBlock
{
    __
    +load(istream): int
    +dump(ostream): int
    ..
    +count(): size_t
    +setCount(num): size_t
    +size(): size_t
    +operator[](i): Record&
}

class Block
{
    -cnt: size_t
    -size: size_t
    -record_array: Record[size]
}

class BlockDecorator
{
    #block: AbstractBlock
}

Serializable <|.. Record
Serializable <|-- AbstractBlock
AbstractBlock <|.. BlockDecorator
AbstractBlock <-- BlockDecorator

Record <. AbstractBlock
AbstractBlock <|.. Block

Record -o Block